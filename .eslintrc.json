{
  "root": true,
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": 2021,
        "sourceType": "module",
        "project": "./tsconfig.*?.json",
        "ecmaFeatures": {
          "jsx": true
        }
      },
      "settings": {
        "import/extensions": [
          ".js",
          ".ts",
          ".tsx"
        ],
        "import/parsers": {
          "@typescript-eslint/parser": [
            ".ts"
          ]
        },
        "import/resolver": {
          "node": {
            "extensions": [
              ".js",
              ".tsx"
            ]
          }
        }
      },
      "env": {
        "browser": true,
        "es2021": true
      },
      "plugins": [
        "react",
        "@typescript-eslint",
        "@nrwl/nx",
        "no-null",
        "eslint-plugin-import",
        "prefer-arrow",
        "jsdoc",
        "simple-import-sort"
      ],
      "extends": [
        "plugin:react/recommended",
        "airbnb-base",
        "eslint:recommended",
        "prettier/@typescript-eslint",
        "prettier",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
      ],
      "rules": {
        "keyword-spacing": "error",
        "key-spacing": "error",
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "scope:microservices",
                "onlyDependOnLibsWithTags": [
                  "scope:shared"
                ]
              },
              {
                "sourceTag": "scope:shared",
                "onlyDependOnLibsWithTags": [
                  "scope:shared"
                ]
              },
              {
                "sourceTag": "scope:web-app",
                "onlyDependOnLibsWithTags": [
                  "scope:shared",
                  "scope:web-app"
                ]
              },
              {
                "sourceTag": "type:util",
                "onlyDependOnLibsWithTags": [
                  "type:util"
                ]
              }
            ]
          }
        ],
        "@typescript-eslint/indent": [
          "error",
          2,
          {
            "FunctionDeclaration": {
              "parameters": "first"
            },
            "FunctionExpression": {
              "parameters": "first"
            },
            "SwitchCase": 0,
            "flatTernaryExpressions": false,
            "ignoreComments": false
          }
        ],
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit"
          }
        ],
        "@typescript-eslint/interface-name-prefix": [
          "off"
        ],
        "import/prefer-default-export": "off",
        "import/no-unresolved": "off",
        "import/extensions": "off",
        "class-methods-use-this": "off",
        "no-useless-constructor": "off",
        "import/no-extraneous-dependencies": "off",
        "lines-between-class-members": "off",
        "no-param-reassign": "off",
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            }
          }
        ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": [
              "public-static-field",
              "protected-static-field",
              "private-static-field",
              "public-instance-field",
              "protected-instance-field",
              "private-instance-field",
              "constructor",
              "public-static-method",
              "protected-static-method",
              "private-static-method",
              "public-instance-method",
              "protected-instance-method",
              "private-instance-method"
            ]
          }
        ],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": [
          "off"
        ],
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-parameter-properties": [
          "off"
        ],
        "@typescript-eslint/no-use-before-define": [
          "off"
        ],
        "@typescript-eslint/no-var-requires": [
          "off"
        ],
        "@typescript-eslint/prefer-for-of": [
          "error"
        ],
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/quotes": [
          "error",
          "single"
        ],
        "@typescript-eslint/semi": [
          "error",
          "always"
        ],
        "@typescript-eslint/unified-signatures": "error",
        "arrow-body-style": "error",
        "arrow-parens": [
          "off",
          "as-needed"
        ],
        "camelcase": [
          "error"
        ],
        "comma-dangle": [
          "error",
          {
            "arrays": "always-multiline",
            "functions": "always-multiline",
            "objects": "always-multiline"
          }
        ],
        "complexity": [
          "off"
        ],
        "constructor-super": "error",
        "curly": [
          "error"
        ],
        "dot-notation": "off",
        "eol-last": [
          "error"
        ],
        "eqeqeq": [
          "error",
          "smart"
        ],
        "guard-for-in": "error",
        "id-blacklist": "off",
        "id-match": "off",
        "jsdoc/no-types": [
          "error"
        ],
        "max-classes-per-file": [
          "off"
        ],
        "max-len": [
          "error",
          {
            "code": 140
          }
        ],
        "new-parens": [
          "error"
        ],
        "no-bitwise": "error",
        "no-caller": "error",
        "no-case-declarations": "off",
        "no-cond-assign": [
          "error"
        ],
        "no-console": [
          "error",
          {
            "allow": [
              "log",
              "dirxml",
              "warn",
              "error",
              "dir",
              "timeLog",
              "assert",
              "clear",
              "count",
              "countReset",
              "group",
              "groupCollapsed",
              "groupEnd",
              "table",
              "Console",
              "markTimeline",
              "profile",
              "profileEnd",
              "timeline",
              "timelineEnd",
              "timeStamp",
              "context"
            ]
          }
        ],
        "no-debugger": "error",
        "no-empty": "off",
        "no-eval": "error",
        "no-fallthrough": "error",
        "no-invalid-this": [
          "off"
        ],
        "no-multiple-empty-lines": [
          "off"
        ],
        "no-new-wrappers": "error",
        "no-throw-literal": "error",
        "no-trailing-spaces": [
          "error"
        ],
        "no-undef-init": "error",
        "no-underscore-dangle": "off",
        "no-unsafe-finally": [
          "error"
        ],
        "no-unused-expressions": "error",
        "no-unused-labels": [
          "error"
        ],
        "object-shorthand": [
          "error"
        ],
        "one-var": [
          "error",
          "never"
        ],
        "prefer-arrow/prefer-arrow-functions": [
          "error"
        ],
        "quote-props": [
          "error",
          "as-needed"
        ],
        "radix": "error",
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              [
                "^((?:react(?!\\/material)).*)$|^((?:nextjs).*)$|^((?:gatsby).*)$"
              ],
              [
                ".*\\/material\\/.*$"
              ],
              [
                "^((?!\\.\\.\\/|\\.\\/|@react|@sonnymiel).)*$"
              ],
              [
                "^@sonnymiel/.*"
              ],
              [
                "^(\\.\\.\\/|\\.\\/)*$"
              ]
            ]
          }
        ],
        "space-before-function-paren": [
          "error",
          {
            "anonymous": "never",
            "asyncArrow": "always",
            "named": "never"
          }
        ],
        "spaced-comment": [
          "error"
        ],
        "use-isnan": [
          "error"
        ],
        "valid-typeof": [
          "off"
        ],
        "@typescript-eslint/await-thenable": [
          "error"
        ],
        "@typescript-eslint/no-for-in-array": [
          "error"
        ],
        "@typescript-eslint/no-misused-promises": [
          "error"
        ],
        "@typescript-eslint/no-unnecessary-type-assertion": [
          "error"
        ],
        "@typescript-eslint/prefer-includes": [
          "error"
        ],
        "@typescript-eslint/prefer-regexp-exec": [
          "error"
        ],
        "@typescript-eslint/prefer-string-starts-ends-with": [
          "error"
        ],
        "require-await": [
          "off"
        ],
        "@typescript-eslint/require-await": [
          "error"
        ],
        "@typescript-eslint/unbound-method": [
          "off"
        ],
        "no-var": [
          "error"
        ],
        "prefer-const": [
          "error"
        ],
        "prefer-rest-params": [
          "error"
        ],
        "prefer-spread": [
          "error"
        ],
        "@typescript-eslint/adjacent-overload-signatures": [
          "error"
        ],
        "@typescript-eslint/ban-types": [
          "error"
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "variableLike",
            "format": [
              "camelCase"
            ]
          },
          {
            "selector": "variable",
            "types": [
              "boolean"
            ],
            "format": [
              "PascalCase"
            ],
            "prefix": [
              "is",
              "should",
              "has",
              "can",
              "did",
              "will"
            ]
          },
          {
            "selector": "variable",
            "modifiers": [
              "const"
            ],
            "format": [
              "UPPER_CASE",
              "camelCase",
              "PascalCase"
            ]
          }
        ],
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/consistent-type-assertions": [
          "error"
        ],
        "@typescript-eslint/explicit-function-return-type": [
          "error"
        ],
        "no-array-constructor": [
          "off"
        ],
        "@typescript-eslint/no-array-constructor": [
          "error"
        ],
        "no-empty-function": [
          "off"
        ],
        "@typescript-eslint/no-empty-interface": [
          "error"
        ],
        "@typescript-eslint/no-inferrable-types": [
          "error"
        ],
        "@typescript-eslint/no-misused-new": [
          "error"
        ],
        "@typescript-eslint/no-namespace": [
          "error"
        ],
        "@typescript-eslint/no-this-alias": [
          "error"
        ],
        "no-shadow": "off",
        "no-unused-vars": [
          "off"
        ],
        "@typescript-eslint/no-unused-vars": [
          "error"
        ],
        "no-use-before-define": [
          "off"
        ],
        "@typescript-eslint/prefer-namespace-keyword": [
          "error"
        ],
        "@typescript-eslint/triple-slash-reference": [
          "error"
        ],
        "@typescript-eslint/type-annotation-spacing": [
          "error"
        ],
        "no-null/no-null": "error",
        "padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "prev": "*",
            "next": "return"
          }
        ]
      }
    }
  ]
}